extends layout
block style
  link(rel='stylesheet', type='text/css', href='../stylesheets/imgareaselect-default.css')
  style.
    a.list-group-item, button.list-group-item{
      width:25%;
      float:left;
    }
    @media screen and (max-width: 1024px) {
      a.list-group-item, button.list-group-item{
        width:33%;
        float:left;
      }
    }
    @media screen and (max-width: 615px) {
      a.list-group-item, button.list-group-item{
        width:50%;
        float:left;
      }
    }
    #overlay {
    position: absolute;
    top: 0px;
    left: 0px;
    border: #cecece 1px solid;    
    }
    #container {
    position : relative;
    }
    #content {
    margin-top : 70px;
    margin-left : 100px;
    margin-right : 100px;
    max-width: 950px;
    }
    #sketch {
    display: none;
    }
    #filter {
    display: none;
    }
    #tb_info td:first-child{
      width: 40px;
    }
    #tb_info td:nth-child(2){
      width: 10px;
    }
    #tb_info td:nth-child(3){
      width: 10px;
    }
    #tb_info td:nth-child(4){
      width: 10px;
    }
block content
  .panel.panel-default
    //- .panel-heading Panel heading without title
    .panel-body
      .page-header
        h1 Detect Face 
          small each frame images from json
      
      .progress
        .progress-bar.progress-bar-info.progress-bar-striped.active(role='progressbar', aria-valuenow='0', aria-valuemin='0', aria-valuemax='100', style="min-width: 2em;") 0/0
      .input-group.input-group-lg
        .input-group-btn
          button#count_files.btn.btn-info.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false') 
            | List Files 
            span.badge ~
            //- span.caret
          #list_json.dropdown-menu.list-group
        input#file-json.form-control(type="text")
      br
      .input-group.input-group-lg
        .input-group-btn
          button#count_images.btn.btn-info.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false') 
            | images folder 
            span.badge ~
            //- span.caret
          #list_images.dropdown-menu.list-group
        input#images-url.form-control(type="text")
      
        //- span.input-group-addon#basic-addon3 images folder #{site_url()}
        //- input#video-url.form-control(type="text",aria-describedby="basic-addon3")
      br
      #container
        canvas#image(width='1', height='1')
        canvas#overlay(width='1', height='1')    
        .row(style='position:absolute;top:0px;right:15px;width:350px;')
          .panel.panel-info
            .panel-heading#tb_name &nbsp;
            table#tb_info.table
              tr
                td 
                  button#xmin -
                td X
                td 
                  button#xplus +
                td :
                td#x
              tr 
                td 
                  button#ymin -
                td Y
                td 
                  button#yplus +
                td :
                td#y
              tr 
                td 
                  button#wmin -
                td W
                td 
                  button#wplus +
                td :
                td#w
              tr 
                td 
                  button#hmin -
                td H
                td 
                  button#hplus +
                td :
                td#h
              tr 
                td 
                  button#rmin -
                td R
                td 
                  button#rplus +
                td :
                td#r
              tr 
                td 
                  button#mmin -
                td M
                td 
                  button#mplus +
                td :
                td#m
          button#copydata copy
          span#copied nodata
          button#pastedata paste
      br
      .col-lg-5
        #playerControl.input-group.input-group-lg
          span.input-group-btn
            button.btn.btn-default.btn-lg(type='button', aria-label='step-backward', disabled='disabled',onclick="fast_backward()")
              span.glyphicon.glyphicon-step-backward(aria-hidden='true')
            button.btn.btn-default.btn-lg(type='button', aria-label='backward', disabled='disabled',onclick="backward()")
              span.glyphicon.glyphicon-backward(aria-hidden='true')
          input#seek.form-control(type='text', aria-label='index',style="text-align:right;",onchange="seek_time()")
          span.input-group-btn
            //- button.btn.btn-default.btn-lg#record(type="button",onclick="record()")
            //-   span.glyphicon.glyphicon-record(aria-hidden='true')
            button.btn.btn-success.btn-lg#start_detect(type="button",onclick="start_detect()")
              span.glyphicon.glyphicon-play(aria-hidden='true')
            button.btn.btn-danger.btn-lg.hidden#pause_detect(type="button",onclick="pause()") 
              span.glyphicon.glyphicon-pause(aria-hidden='true')
            button.btn.btn-default.btn-lg(type='button', aria-label='forward', disabled='disabled',onclick="forward()")
              span.glyphicon.glyphicon-forward(aria-hidden='true')
            button.btn.btn-default.btn-lg(type='button', aria-label='fast-forward', disabled='disabled',onclick="fast_forward()")
              span.glyphicon.glyphicon-fast-forward(aria-hidden='true')
      .col-lg-4
          button#selectBox.btn.btn-default.btn-lg(type='button', aria-label='crop', disabled='disabled',onclick="selectBox()")
            span.glyphicon.glyphicon-move(aria-hidden='true')
          button#save.btn.btn-default.btn-lg(type='button', aria-label='save', disabled='disabled',onclick="saveResult()")
            span.glyphicon.glyphicon-floppy-open(aria-hidden='true')
        //- input.btn(type='button', value='manually select face', onclick='selectBox()')
    .panel-footer#convergence &nbsp;
block script
  script(src='../javascripts/utils.js')
  script(src='../javascripts/dat.gui.min.js')
  script(src='../javascripts/numeric-1.2.6.min.js')
  script(src='../javascripts/mosse.js')
  script(src='../javascripts/jsfeat-min.js')
  script(src='../javascripts/frontalface.js')
  script(src='../javascripts/jsfeat_detect.js')
  script(src='../javascripts/left_eye_filter.js')
  script(src='../javascripts/right_eye_filter.js')
  script(src='../javascripts/nose_filter.js')
  script(src='../javascripts/model_pca_20_svm.js')
  script(src='../javascripts/clm.js')
  script(src='../javascripts/svmfilter_webgl.js')
  script(src='../javascripts/svmfilter_fft.js')
  script(src='../javascripts/mossefilter.js')
  script(src='../javascripts/Stats.js')
  script(src='../javascripts/jquery.imgareaselect.pack.js')
  script(src='../javascripts/BlobBuilder.min.js')
  script(src='../javascripts/Filesaver.min.js')
  script(type='text/javascript').
    var CANVAS_WIDTH = 682,
    CANVAS_HEIGHT = 469,
    STATE = 0,
    DATA = [],
    BOX = [],
    RESULT = [];
    var recording = false;
    var idx;
    var copiedData;
    var cc = document.getElementById('image').getContext('2d');
    var overlay = document.getElementById('overlay');
    var overlayCC = overlay.getContext('2d');
    var ctrack = new clm.tracker({
        stopOnConvergence: false
    });
    var tdraw;
    var model;
    ctrack.init(pModel);
    stats = new Stats();
    stats.domElement.style.position = 'absolute';
    stats.domElement.style.top = '0px';
    //- $('#container').append(stats.domElement);
    // SCALE THE CANVAS
    $('#image,#overlay').attr({width:CANVAS_WIDTH, height:CANVAS_HEIGHT})
    //- 
    document.addEventListener("clmtrackrNotFound", function(event) {
      console.log("clmtrackrNotFound");
      //- ctrack.reset();
      //- ctrack.stop();
      //- pause();
      document.getElementById('convergence').innerHTML = "NOT CONVERGED";
      document.getElementById('convergence').style.backgroundColor = "#FF0000";
      //- alert("The tracking had problems with finding a face in this image. Try selecting the face in the image manually.")
    }, false);
    // detect if tracker loses tracking of face
    document.addEventListener("clmtrackrLost", function(event) {
      console.log("clmtrackrLost");
      BOX[idx] = null;
      //- ctrack.reset();
      ctrack.stop();
      //- pause();
      document.getElementById('convergence').innerHTML = "NOT CONVERGED";
      document.getElementById('convergence').style.backgroundColor = "#FF0000";
      //- alert("The tracking had problems converging on a face in this image. Try selecting the face in the image manually.")
    }, false);
    // detect if tracker has converged
    document.addEventListener("clmtrackrConverged", function(event) {
      document.getElementById('convergence').innerHTML = "CONVERGED";
      document.getElementById('convergence').style.backgroundColor = "#00FF00";
      // stop drawloop
      //- cancelRequestAnimFrame(drawRequest);
      //- console.log('draw.call drawloop')
      //- if(tdraw)tdraw.pause();
      ctrack.stop();
    }, false);
    // update stats on iteration
    document.addEventListener("clmtrackrIteration", function(event) {
        stats.update();
    }, false);
    function selectBox() {
        pause();
        //- cancelRequestAnimFrame(drawRequest);
        overlayCC.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
        document.getElementById('convergence').innerHTML = "";
        ctrack.stop();
        ctrack.reset();
        $('#overlay').addClass('hidden');
        $('#image').imgAreaSelect({
            handles: true,
            onSelectEnd: function(img, selection) {
                // create box
                var box = [selection.x1, selection.y1, selection.width, selection.height];
                // do fitting
                ctrack.start(document.getElementById('image'), box);
                BOX[idx] = box;
                setTimeout(function(){
                  drawLoop();
                },50)
                $('#overlay').removeClass('hidden');
            },
            autoHide: true
        });
    }
    function init(){
      $('.dropdown-menu.list-group').each(function(){
        $(this).css('width',$(this).parents('.input-group').width())
      })
    }
    var get_time_json = function(){
      $.ajax({
        url:'./current_time/json_time',
        type:'GET',
        dataType:'json',
        success:function(e){
          $('#list_json').html('')
          if(typeof(e.files)!= 'undefined'){
            $('#count_files span').html(e.files.length)
            for(var i in e.files){
              $('#list_json').append('<a class="list-group-item" href="javascript:void(0);">'+e.files[i]+'</a>')
            }
            $('#list_json a').on('click',function(){
              $('#file-json').val($(this).html()).trigger('change')
              RESULT = []
              loadResult();
            })
            init();
          }
        }
      })
    }
    var get_img_folder = function(){
      $.ajax({
        url:'./detect_face/img_folder',
        type:'GET',
        dataType:'json',
        success:function(e){
          $('#list_images').html('')
          if(typeof(e.folder)!= 'undefined'){
            $('#count_images span').html(e.folder.length)
            for(var i in e.folder){
              $('#list_images').append('<a class="list-group-item" href="javascript:void(0);">'+e.folder[i]+'</a>')
            }
            $('#list_images a').on('click',function(){
              $('#images-url').val($(this).html()).trigger('change')
            })
            init();
          }
        }
      })
    }
    var record = function(){
      recording = recording ? false:true;
      if(recording){
        $('#playerControl').addClass('has-error')
        $('#tb_info').parent().removeClass('panel-info').addClass('panel-danger')
        $('#record').removeClass('btn-default').addClass('btn-danger')
        $('#record span').removeClass('glyphicon-record').addClass('glyphicon-remove')
      }else{
        $('#playerControl').removeClass('has-error')
        $('#tb_info').parent().removeClass('panel-danger').addClass('panel-info')
        $('#record').removeClass('btn-danger').addClass('btn-default')
        $('#record span').removeClass('glyphicon-remove').addClass('glyphicon-record')        
      }
    }
    var fast_backward = function(){
      STATE = -2;
    }
    var backward = function(){
      STATE = -1;
    }
    var seek_time = function(e){
      STATE = 4;
      v = parseInt($('#seek').val());
      if(!v){
        v = 1
        
      }
      if( v > DATA.length ){
        v = DATA.length;
      }
      if(v <= 0){
        v = 1;
      }
      $('#seek').val(v)
    }
    var forward = function(){
      STATE = 2;
    }
    var fast_forward = function(){
      STATE = 3;
    }
    var pause = function(){
      STATE = 0;
      $('#start_detect').removeClass('hidden')
      $('#pause_detect').addClass('hidden')
    }
    var start_detect = function(){
      STATE = 1;
      if(DATA.length>0){
        $('#start_detect').addClass('hidden')
        $('#pause_detect').removeClass('hidden')
        return;
      }
      $('#file-json').parent().removeClass('has-error')
      $('#images-url').parent().removeClass('has-error')
      $('#start_detect').addClass('hidden')
      $('#pause_detect').removeClass('hidden')
      $('.progress-bar').css('width', 0+'%').attr('aria-valuenow', 0).html('0%');
      $('.progress-bar').removeClass('progress-bar-success progress-bar-danger').addClass('progress-bar-info')
      
      if($('#file-json').val() == ''){
        $('#start_detect').removeClass('hidden')
        $('#pause_detect').addClass('hidden')
        return $('#file-json').parent().addClass('has-error')
      }
      if($('#images-url').val() == ''){
        $('#start_detect').removeClass('hidden')
        $('#pause_detect').addClass('hidden')
        return $('#images-url').parent().addClass('has-error')
      }
      
      $.ajax({
        url:'../json/'+$('#file-json').val(),
        type:'GET',
        dataType:'json',
        success:function(e){
          DATA = e
          process_detecting($('#images-url').val())
        },
        error:function(e){
          $('#start_detect').removeClass('hidden')
          $('#pause_detect').addClass('hidden')
          return $('#file-json').parent().addClass('has-error')
        }
      })
    }
    
    function drawLoop() {
        //- drawRequest = requestAnimFrame(drawLoop);
        overlayCC.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
        if (p = ctrack.getCurrentPosition()) {
            //- ctrack.draw(overlay);
            p1 ={x:p[27][0],y:p[27][1]};
            p2 ={x:p[32][0],y:p[32][1]};
            if(recording){
              RESULT[idx] = {
                x : p[1][0],
                y : (p[20][1] <= p[16][1] ? p[20][1] : p[16][1]),
                w : p[13][0] - p[1][0],
                h : p[7][1] - (p[20][1] <= p[16][1] ? p[20][1] : p[16][1]),
                r : -angleDeg(p1, p2),
                m : p[57][1]-p[60][1] < 0 ? 0 : p[57][1]-p[60][1]// offset mouth
              }
              showHelper();
              tolerance = LimitedRange(RESULT[idx].w, 20, 90, 0, 25);
              BOX[idx] = [
                Math.max(RESULT[idx].x-tolerance,0), 
                Math.max(RESULT[idx].y-tolerance,0), 
                Math.min(RESULT[idx].w+tolerance,CANVAS_WIDTH), 
                Math.min(RESULT[idx].h+tolerance,CANVAS_HEIGHT)
              ]; 
            }
            
            //- $('#tb_name').html(DATA[idx]+'.png')
            if(RESULT[idx]){
              $('#tb_info #x').html(RESULT[idx].x)
              $('#tb_info #y').html(RESULT[idx].y)
              $('#tb_info #w').html(RESULT[idx].w)
              $('#tb_info #h').html(RESULT[idx].h)
              $('#tb_info #r').html(RESULT[idx].r)
              $('#tb_info #m').html(RESULT[idx].m)
            }else{
              $('#tb_info #x').html('-')
              $('#tb_info #y').html('-')
              $('#tb_info #w').html('-')
              $('#tb_info #h').html('-')
              $('#tb_info #r').html('-')
              $('#tb_info #m').html('-')
            }
        }
    }
    var showHelper = function(){
      //- if(RESULT[idx-1]){
      //-   //- console.log(RESULT[idx]);
        overlayCC.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
      //-   overlayCC.globalAlpha = 0.5
      //-   var scale = RESULT[idx-1].w / 165;//  option.gender == 'male' ? transform.w / 140 : //transform.w / 193 : transform.w / 188;
      //-   var halfx = RESULT[idx-1].w/2;
      //-   var halfy = RESULT[idx-1].h/2;
      //-   overlayCC.save();
      //-   overlayCC.translate( RESULT[idx-1].x+halfx,RESULT[idx-1].y+halfy);
      //-   overlayCC.scale(scale, scale);
      //-   overlayCC.rotate( -RESULT[idx-1].r *Math.PI/180 );
      //-   overlayCC.drawImage(model1,-256,-256);
      //-   //- overlayCC.drawImage(MOUTH,-256,-256+RESULT[idx].m);
      //-   overlayCC.restore();
      //-   //- overlayCC.drawImage(model,0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
      //- }
      if(RESULT[idx]){
        //- console.log(RESULT[idx]);
        //- overlayCC.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
        var scale = RESULT[idx].w / 165;//  option.gender == 'male' ? transform.w / 140 : //transform.w / 193 : transform.w / 188;
        var halfx = RESULT[idx].w/2;
        var halfy = RESULT[idx].h/2;
        overlayCC.globalAlpha = 0.7
        overlayCC.save();
        overlayCC.translate( RESULT[idx].x+halfx,RESULT[idx].y+halfy);
        overlayCC.scale(scale, scale);
        overlayCC.rotate( -RESULT[idx].r *Math.PI/180 );
        overlayCC.drawImage(model,-256,-256);
        //- overlayCC.drawImage(MOUTH,-256,-256+RESULT[idx].m);
        overlayCC.restore();
        //- overlayCC.drawImage(model,0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
      }
      //- if(RESULT[idx+1]){
      //-   //- console.log(RESULT[idx]);
      //-   //- overlayCC.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
      //-   overlayCC.globalAlpha = 0.5
      //-   var scale = RESULT[idx+1].w / 165;//  option.gender == 'male' ? transform.w / 140 : //transform.w / 193 : transform.w / 188;
      //-   var halfx = RESULT[idx+1].w/2;
      //-   var halfy = RESULT[idx+1].h/2;
      //-   overlayCC.save();
      //-   overlayCC.translate( RESULT[idx+1].x+halfx,RESULT[idx+1].y+halfy);
      //-   overlayCC.scale(scale, scale);
      //-   overlayCC.rotate( -RESULT[idx+1].r *Math.PI/180 );
      //-   overlayCC.drawImage(model2,-256,-256);
      //-   //- overlayCC.drawImage(MOUTH,-256,-256+RESULT[idx].m);
      //-   overlayCC.restore();
      //-   //- overlayCC.drawImage(model,0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
      //- }
    }
    //- tdraw = new FpsCtrl(30,drawLoop);
    var process_detecting = function(url){
      length = DATA.length;
      idx = 0;
      drawRequest = undefined;
      $('#playerControl .btn:not("#start_detect,#pause_detect"), #selectBox, #save').removeAttr('disabled')
      // --------------------------------- DRAW -----------------------------------
      this.draw = function(){
        $('#seek').val(idx+1)
        var img = new Image();
        img.onload = function() {
          $('#images-url').parent().removeClass('has-error')
          CANVAS_WIDTH = this.width;
          CANVAS_HEIGHT = this.height;
          $('#image,#overlay').attr({width:CANVAS_WIDTH, height:CANVAS_HEIGHT})
          _size = calculateAspectRatioFit(this.width, this.height, CANVAS_WIDTH, CANVAS_HEIGHT)
          progress = LimitedRange(idx+1, 0, length, 0, 100)
          $('.progress-bar').css('width', progress+'%').attr('aria-valuenow', progress).html((idx+1)+'/'+length+' ('+Math.ceil(parseFloat(progress))+'%)') 
          cc.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
          cc.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);//_size.width, _size.height);
          showHelper();
          if(recording){
            if(BOX[idx]){
              ctrack.start(document.getElementById('image'),BOX[idx]);
            }else{
              if(BOX[idx-1]){
                console.log(BOX[idx-1]);
                ctrack.start(document.getElementById('image'),BOX[idx-1]);
                BOX[idx] = BOX[idx-1];
              }else{
                //- ctrack.start(document.getElementById('image'));
              }
            }
            //- if(tdraw)tdraw.start();
            setTimeout(function(){
              drawLoop();
            },50)
          }else{
            ctrack.stop();
          }
          
          setTimeout(function(){
            img = null;
            if(idx+2 <= length){
              //- cancelRequestAnimFrame(drawRequest);
            }else{
              if(STATE == 1){
                $('.progress-bar').removeClass('progress-bar-info progress-bar-danger').addClass('progress-bar-success')
                $('#start_detect').removeClass('hidden')
                $('#pause_detect').addClass('hidden')
                idx = 0; // reset index when completed by playing
              }
              STATE = 0;
            }
            detect();
          },100)
        };
        img.onerror = function(){
          $('#images-url').parent().addClass('has-error')
          setTimeout(function(){
            if(idx+2 <= length){
              //- idx++;
              detect();
            }
          },10)
        }
        img.src = '../video/images/'+url+'/'+(DATA[idx])+'.png';
      }
      // --------------------------------- DETECT -----------------------------------------
      this.detect = function(){
        if (STATE == -1){
          if(idx-1 >= 0){
            idx--;
            STATE=0;
            return draw();
          }
        }else if (STATE == -2){
          idx= 0;
          STATE=0;
          return draw();
        }else if (STATE == 1){
          if(idx+2 <= length){
            idx++;
            return draw();
          }
        }else if (STATE == 2){
          if(idx+2 <= length){
            idx++;
            STATE=0;
            return draw();            
          }
        }else if (STATE == 3){
          idx = length-1;
          STATE=0;
          return draw();
        }else if(STATE == 4){
          idx = parseInt($('#seek').val())-1
          STATE=0;
          return draw();
        }
        setTimeout(function(){ // DEFAULT CONDITION , include STATE=0
          detect();
        },300)
      }
      if(length>0){
        draw();
      }
    }
    var saveResult = function(){
      //- if(RESULT.length != DATA.length || DATA.length == 0){
      //-   return alert('result data '+RESULT.length+'/'+DATA.length+' complete.')
      //- }
      $.ajax({
        url:'./detect_face/json_result',
        type:'PUT',
        data:{name:$('#images-url').val(),data:JSON.stringify(RESULT),_csrf:_csrf},
        dataType:'json',
        success:function(e){
          console.log(e)
        }
      })
    }
    var loadResult = function(){
      $.ajax({
        url:'../json/result/'+$('#file-json').val(),
        type:'GET',
        dataType:'json',
        success:function(e){
          RESULT =  e
        },
        error:function(e){
        }
      })
    }
    var AdjustManual = function(_id,_key,_behav){
      _xv = _behav == '-' ? -1 : 1;
      switch (_key) {
        case 'x':
          RESULT[_id].x += 1*_xv
          break;
        case 'y':
          RESULT[_id].y += 1*_xv
          break;
        case 'w':
          RESULT[_id].w += 1*_xv
          break;
        case 'h':
          RESULT[_id].h += 1*_xv
          break;
        case 'r':
          RESULT[_id].r += 1*_xv
          break;
        case 'm':
          RESULT[_id].m += 1*_xv
          break;
      }
      showHelper();
    }
    $(document).ready(function(){
      get_time_json();
      get_img_folder();
      $(window).resize(init);
      $('#file-json,#images-url').on('change',function(){
        DATA = []
        length = DATA.length
        if(STATE!==0){
          STATE = 0;
          start_detect();
        }
      })
      model = new Image()
      model.src = '../video/images/face-male.png';
      model1 = new Image()
      model1.src = '../video/images/face-old.png';
      model2 = new Image()
      model2.src = '../video/images/face-new.png';
      
      
      $('button#xmin').click(function(){
        AdjustManual(idx,'x','-')
      })
      $('button#xplus').click(function(){
        AdjustManual(idx,'x','+')
      })
      $('button#ymin').click(function(){
        AdjustManual(idx,'y','-')
      })
      $('button#yplus').click(function(){
        AdjustManual(idx,'y','+')
      })
      $('button#wmin').click(function(){
        AdjustManual(idx,'w','-')
      })
      $('button#wplus').click(function(){
        AdjustManual(idx,'w','+')
      })
      $('button#hmin').click(function(){
        AdjustManual(idx,'h','-')
      })
      $('button#hplus').click(function(){
        AdjustManual(idx,'h','+')
      })
      $('button#rmin').click(function(){
        AdjustManual(idx,'r','-')
      })
      $('button#rplus').click(function(){
        AdjustManual(idx,'r','+')
      })
      $('button#mmin').click(function(){
        AdjustManual(idx,'m','-')
      })
      $('button#mplus').click(function(){
        AdjustManual(idx,'m','+')
      })
      $('button#copydata').click(function(){
        copiedData = RESULT[idx]
        $('#copied').text('data '+(idx+1))
      })
      $('button#pastedata').click(function(){
        if(copiedData){
          RESULT[idx] = JSON.parse(JSON.stringify(copiedData))
          copiedData = null
          $('#copied').text('nodata')
          showHelper();
        }
      })
      
    });
    action = 'move';
    showAct = function(){
      $('#tb_name').html(action)
    }
    modify = function(id,v){
      switch (action) {
        case 'move':
          if(id =='v'){
            if(v==1){
              $('button#xplus').trigger('click')
            }else{
              $('button#xmin').trigger('click')
            }
          }else{
            if(v==1){
              $('button#yplus').trigger('click')
            }else{
              $('button#ymin').trigger('click')
            }
          }
          break;
        case 'rotate':
          if(v==1){
            $('button#rplus').trigger('click')
          }else{
            $('button#rmin').trigger('click')
          }
          break;
        case 'scale':
          if(id =='v'){
            if(v==1){
              $('button#wplus').trigger('click')
            }else{
              $('button#wmin').trigger('click')
            }
          }else {
            if(v==1){
              $('button#hplus').trigger('click')
            }else{
              $('button#hmin').trigger('click')
            }
          }
          break;
        default:
          
      }
    }
    $(document).keyup(function(e){
      switch (e.keyCode) {
        case 65:
          backward()
          e.preventDefault()
          break;
        case 68:
          forward()
          e.preventDefault()
          break;
        case 32:
          if(STATE != 1){
            start_detect()
          }else{
            pause()
          }
          e.preventDefault()
          break;
        case 67:
          $('button#copydata').trigger('click')
          e.preventDefault()
          break;
        case 86:
          $('button#pastedata').trigger('click')
          e.preventDefault()
          break;
        case 69:
          action = 'rotate'
          showAct()
          e.preventDefault()
          break;
        case 81:
          action = 'move'
          showAct()
          e.preventDefault()
          break;
        case 87:
          action = 'scale'
          showAct()
          e.preventDefault()
          break;
        case 37: // kiri
          modify('v',-1)
          e.preventDefault()
          break;
        case 39: // kanan
          modify('v',1)
          e.preventDefault()
          break;
        case 38: // atas
          modify('h',-1)
          e.preventDefault()
          break;
        case 40: // bawah
          modify('h',1)
          e.preventDefault()
          break;
      }
    })
    $(document).keydown(function(e){
      switch (e.keyCode) {
        case 38: // atas
          e.preventDefault()
          break;
        case 40: // bawah
          e.preventDefault()
          break;
        }
      })
    showAct()
    
